<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.TourMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加旅游景点记录 -->
	<insert id="addTour" parameterType="tour">
		insert into t_tour(tourName,tourPhoto,startPlace,endPlace,tourPrice,tourDesc,tuijianFlag,hitNum,addTime) values 
		(#{tourName},#{tourPhoto},#{startPlace},#{endPlace},#{tourPrice},#{tourDesc},#{tuijianFlag},#{hitNum},#{addTime})
	</insert>

	<!-- 按照查询条件分页查询旅游景点记录 -->
	<select id="queryTour" resultMap="tourMap" >
		select t_tour.* from t_tour ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="tourMap" type="tour">
        <id property="tourId" column="tourId" />
    </resultMap>

    <!-- 按照查询条件查询所有旅游景点记录 -->
	<select id="queryTourList" resultMap="tourMap" >
		select t_tour.* from t_tour ${where}
	</select>

    <!-- 按照查询条件的旅游景点记录数 -->
	<select id="queryTourCount" resultType="int">
		select count(*) from t_tour ${where}
	</select>

	<!-- 根据主键查询某个旅游景点记录 -->
	<select id="getTour" parameterType="int" resultMap="tourMap">
		select * from t_tour where t_tour.tourId = #{tourId}
	</select>

	<!-- 更新旅游景点记录 -->
	<update id="updateTour" parameterType="tour">
		update t_tour set tourName=#{tourName},tourPhoto=#{tourPhoto},startPlace=#{startPlace},endPlace=#{endPlace},tourPrice=#{tourPrice},tourDesc=#{tourDesc},tuijianFlag=#{tuijianFlag},hitNum=#{hitNum},addTime=#{addTime} where tourId = #{tourId}
	</update>

	<!-- 删除旅游景点记录 -->
	<delete id="deleteTour" parameterType="int">
		delete from t_tour where tourId=#{tourId}
	</delete>

</mapper>
